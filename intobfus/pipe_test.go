/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */

package intobfus

import "fmt"

func ExamplePipe_whatItDoes() {
	// obfuscates 0~255 (1~255 actually)
	max := uint64(255)
	keys := []uint64{3 * 7 * 11, 223}

	parts := []Obfuscator{
		MustRestore(max, keys[0]),
		MustRestore(max, keys[1]),
	}

	pipe := Pipe(parts...)
	tmp := parts[0].Obfuscate(3)
	fmt.Printf("part[0].enc(  3) = %3d\n", tmp)
	fmt.Printf("part[1].enc(%3d) = %3d\n", tmp, parts[1].Obfuscate(tmp))
	fmt.Printf("   pipe.enc(  3) = %3d\n", pipe.Obfuscate(3))

	// output: part[0].enc(  3) = 181
	// part[1].enc(181) = 171
	//    pipe.enc(  3) = 171
}

func ExamplePipe_howItLooks() {
	// obfuscates 0~255 (1~255 actually)
	max := uint64(255)
	keys := []uint64{3 * 7 * 11, 223}

	parts := []Obfuscator{
		MustRestore(max, keys[0]),
		MustRestore(max, keys[1]),
	}

	pipe := Pipe(parts...)
	for i := uint64(1); i < 255; i++ {
		fmt.Printf("enc(%3d) = %3d\n", i, pipe.Obfuscate(i))
	}

	// output: enc(  1) = 111
	// enc(  2) = 114
	// enc(  3) = 171
	// enc(  4) = 228
	// enc(  5) =  29
	// enc(  6) =  86
	// enc(  7) = 143
	// enc(  8) = 200
	// enc(  9) =   1
	// enc( 10) =  58
	// enc( 11) = 115
	// enc( 12) = 172
	// enc( 13) = 229
	// enc( 14) =  30
	// enc( 15) =  87
	// enc( 16) = 144
	// enc( 17) = 201
	// enc( 18) =   2
	// enc( 19) =  59
	// enc( 20) = 116
	// enc( 21) = 173
	// enc( 22) = 230
	// enc( 23) =  31
	// enc( 24) =  88
	// enc( 25) = 145
	// enc( 26) = 202
	// enc( 27) =   3
	// enc( 28) =  60
	// enc( 29) = 117
	// enc( 30) = 174
	// enc( 31) = 231
	// enc( 32) =  32
	// enc( 33) =  89
	// enc( 34) = 146
	// enc( 35) = 203
	// enc( 36) =   4
	// enc( 37) =  61
	// enc( 38) = 118
	// enc( 39) = 175
	// enc( 40) = 232
	// enc( 41) =  33
	// enc( 42) =  90
	// enc( 43) = 147
	// enc( 44) = 204
	// enc( 45) =   5
	// enc( 46) =  62
	// enc( 47) = 119
	// enc( 48) = 176
	// enc( 49) = 233
	// enc( 50) =  34
	// enc( 51) =  91
	// enc( 52) = 148
	// enc( 53) = 205
	// enc( 54) =   6
	// enc( 55) =  63
	// enc( 56) = 120
	// enc( 57) = 177
	// enc( 58) = 234
	// enc( 59) =  35
	// enc( 60) =  92
	// enc( 61) = 149
	// enc( 62) = 206
	// enc( 63) =   7
	// enc( 64) =  64
	// enc( 65) = 121
	// enc( 66) = 178
	// enc( 67) = 235
	// enc( 68) =  36
	// enc( 69) =  93
	// enc( 70) = 150
	// enc( 71) = 207
	// enc( 72) =   8
	// enc( 73) = 159
	// enc( 74) = 122
	// enc( 75) = 179
	// enc( 76) = 236
	// enc( 77) =  37
	// enc( 78) =  94
	// enc( 79) = 151
	// enc( 80) = 208
	// enc( 81) =   9
	// enc( 82) =  66
	// enc( 83) = 123
	// enc( 84) = 180
	// enc( 85) = 237
	// enc( 86) =  38
	// enc( 87) =  95
	// enc( 88) = 152
	// enc( 89) = 209
	// enc( 90) =  10
	// enc( 91) =  67
	// enc( 92) = 124
	// enc( 93) = 181
	// enc( 94) = 238
	// enc( 95) =  39
	// enc( 96) =  96
	// enc( 97) = 153
	// enc( 98) = 210
	// enc( 99) =  11
	// enc(100) =  68
	// enc(101) = 125
	// enc(102) = 182
	// enc(103) = 239
	// enc(104) =  40
	// enc(105) =  97
	// enc(106) = 154
	// enc(107) = 211
	// enc(108) =  12
	// enc(109) =  69
	// enc(110) = 126
	// enc(111) = 183
	// enc(112) = 240
	// enc(113) =  57
	// enc(114) =  98
	// enc(115) = 155
	// enc(116) = 212
	// enc(117) =  13
	// enc(118) =  70
	// enc(119) = 127
	// enc(120) = 184
	// enc(121) = 241
	// enc(122) =  42
	// enc(123) =  99
	// enc(124) = 156
	// enc(125) = 213
	// enc(126) =  14
	// enc(127) =  71
	// enc(128) = 128
	// enc(129) = 185
	// enc(130) = 242
	// enc(131) =  43
	// enc(132) = 100
	// enc(133) = 157
	// enc(134) = 214
	// enc(135) =  15
	// enc(136) =  72
	// enc(137) = 129
	// enc(138) = 186
	// enc(139) = 243
	// enc(140) =  44
	// enc(141) = 101
	// enc(142) = 158
	// enc(143) = 215
	// enc(144) =  16
	// enc(145) =  73
	// enc(146) = 130
	// enc(147) = 187
	// enc(148) = 244
	// enc(149) =  45
	// enc(150) = 102
	// enc(151) = 223
	// enc(152) = 216
	// enc(153) =  17
	// enc(154) =  74
	// enc(155) = 131
	// enc(156) = 188
	// enc(157) = 245
	// enc(158) =  46
	// enc(159) = 103
	// enc(160) = 160
	// enc(161) = 217
	// enc(162) =  18
	// enc(163) =  75
	// enc(164) = 132
	// enc(165) = 189
	// enc(166) = 246
	// enc(167) =  47
	// enc(168) = 104
	// enc(169) = 161
	// enc(170) = 218
	// enc(171) =  19
	// enc(172) =  76
	// enc(173) = 133
	// enc(174) = 190
	// enc(175) = 247
	// enc(176) =  48
	// enc(177) = 105
	// enc(178) = 162
	// enc(179) = 219
	// enc(180) =  20
	// enc(181) =  77
	// enc(182) = 134
	// enc(183) = 191
	// enc(184) = 248
	// enc(185) =  49
	// enc(186) = 106
	// enc(187) = 163
	// enc(188) = 220
	// enc(189) =  21
	// enc(190) =  78
	// enc(191) = 135
	// enc(192) = 192
	// enc(193) = 249
	// enc(194) =  50
	// enc(195) = 107
	// enc(196) = 164
	// enc(197) = 221
	// enc(198) =  22
	// enc(199) =  79
	// enc(200) = 136
	// enc(201) = 193
	// enc(202) = 250
	// enc(203) =  51
	// enc(204) = 108
	// enc(205) = 165
	// enc(206) = 222
	// enc(207) =  23
	// enc(208) =  80
	// enc(209) = 137
	// enc(210) = 194
	// enc(211) = 251
	// enc(212) =  52
	// enc(213) = 109
	// enc(214) = 166
	// enc(215) =  65
	// enc(216) =  24
	// enc(217) =  81
	// enc(218) = 138
	// enc(219) = 195
	// enc(220) = 252
	// enc(221) =  53
	// enc(222) = 110
	// enc(223) = 167
	// enc(224) = 224
	// enc(225) =  25
	// enc(226) =  82
	// enc(227) = 139
	// enc(228) = 196
	// enc(229) = 253
	// enc(230) =  54
	// enc(231) =  41
	// enc(232) = 168
	// enc(233) = 225
	// enc(234) =  26
	// enc(235) =  83
	// enc(236) = 140
	// enc(237) = 197
	// enc(238) = 254
	// enc(239) =  55
	// enc(240) = 112
	// enc(241) = 169
	// enc(242) = 226
	// enc(243) =  27
	// enc(244) =  84
	// enc(245) = 141
	// enc(246) = 198
	// enc(247) = 255
	// enc(248) =  56
	// enc(249) = 113
	// enc(250) = 170
	// enc(251) = 227
	// enc(252) =  28
	// enc(253) =  85
	// enc(254) = 142
}
